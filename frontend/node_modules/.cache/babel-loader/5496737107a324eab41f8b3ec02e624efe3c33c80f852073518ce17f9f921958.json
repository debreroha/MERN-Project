{"ast":null,"code":"var _jsxFileName = \"E:\\\\MERN-Project\\\\frontend\\\\src\\\\components\\\\GetSong.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\nimport { deleteSongFetch } from '../songState/songsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetSong = () => {\n  _s();\n  const dispatch = useDispatch();\n  const songs = useSelector(state => state.songs.songs);\n  const [distinctData, setDistinctData] = useState({});\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const handleButtonClick = category => {\n    setSelectedCategory(selectedCategory === category ? null : category);\n  };\n  const deleteSong = value => {\n    const songToDelete = songs.find(song => song[selectedCategory] === value);\n    if (songToDelete) {\n      dispatch(deleteSongFetch(songToDelete._id));\n    }\n  };\n  useEffect(() => {\n    if (songs && selectedCategory) {\n      const uniqueData = {\n        title: new Set(),\n        artist: new Set(),\n        album: new Set(),\n        genre: new Set()\n      };\n      songs.forEach(item => {\n        uniqueData.title.add(item.title);\n        uniqueData.artist.add(item.artist);\n        uniqueData.album.add(item.album);\n        uniqueData.genre.add(item.genre);\n      });\n      setDistinctData({\n        title: Array.from(uniqueData.title),\n        artist: Array.from(uniqueData.artist),\n        album: Array.from(uniqueData.album),\n        genre: Array.from(uniqueData.genre)\n      });\n    }\n  }, [songs, selectedCategory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('title'),\n      children: selectedCategory === 'title' ? 'Undo' : 'Titles'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('artist'),\n      children: selectedCategory === 'artist' ? 'Undo' : 'Artists'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('album'),\n      children: selectedCategory === 'album' ? 'Undo' : 'Albums'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('genre'),\n      children: selectedCategory === 'genre' ? 'Undo' : 'Genres'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), selectedCategory && distinctData[selectedCategory] && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedCategory.charAt(0).toUpperCase() + selectedCategory.slice(1), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), distinctData[selectedCategory].map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faMusic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), \" \", item, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteSong(item),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(GetSong, \"cuXfROrdLLozzC9hAxGEmUImB/A=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = GetSong;\nexport default GetSong;\nvar _c;\n$RefreshReg$(_c, \"GetSong\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","FontAwesomeIcon","faMusic","deleteSongFetch","jsxDEV","_jsxDEV","GetSong","_s","dispatch","songs","state","distinctData","setDistinctData","selectedCategory","setSelectedCategory","handleButtonClick","category","deleteSong","value","songToDelete","find","song","_id","uniqueData","title","Set","artist","album","genre","forEach","item","add","Array","from","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","slice","map","index","icon","_c","$RefreshReg$"],"sources":["E:/MERN-Project/frontend/src/components/GetSong.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\r\nimport { RootState } from '../songState/songsState';\r\nimport { deleteSongFetch } from '../songState/songsSlice';\r\n\r\nconst GetSong: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const songs = useSelector((state: RootState) => state.songs.songs);\r\n  const [distinctData, setDistinctData] = useState<{ [key: string]: string[] }>({});\r\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\r\n\r\n  const handleButtonClick = (category: string) => {\r\n    setSelectedCategory(selectedCategory === category ? null : category);\r\n  };\r\n\r\n  const deleteSong = (value: string) => {\r\n    const songToDelete = songs.find((song) => song[selectedCategory as keyof typeof song] === value);\r\n    if (songToDelete) {\r\n      dispatch(deleteSongFetch(songToDelete._id!));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (songs && selectedCategory) {\r\n      const uniqueData: { [key: string]: Set<string> } = {\r\n        title: new Set<string>(),\r\n        artist: new Set<string>(),\r\n        album: new Set<string>(),\r\n        genre: new Set<string>(),\r\n      };\r\n\r\n      songs.forEach((item) => {\r\n        uniqueData.title.add(item.title);\r\n        uniqueData.artist.add(item.artist);\r\n        uniqueData.album.add(item.album);\r\n        uniqueData.genre.add(item.genre);\r\n      });\r\n\r\n      setDistinctData({\r\n        title: Array.from(uniqueData.title),\r\n        artist: Array.from(uniqueData.artist),\r\n        album: Array.from(uniqueData.album),\r\n        genre: Array.from(uniqueData.genre),\r\n      });\r\n    }\r\n  }, [songs, selectedCategory]);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => handleButtonClick('title')}>\r\n        {selectedCategory === 'title' ? 'Undo' : 'Titles'}\r\n      </button>\r\n\r\n      <button onClick={() => handleButtonClick('artist')}>\r\n        {selectedCategory === 'artist' ? 'Undo' : 'Artists'}\r\n      </button>\r\n\r\n      <button onClick={() => handleButtonClick('album')}>\r\n        {selectedCategory === 'album' ? 'Undo' : 'Albums'}\r\n      </button>\r\n\r\n      <button onClick={() => handleButtonClick('genre')}>\r\n        {selectedCategory === 'genre' ? 'Undo' : 'Genres'}\r\n      </button>\r\n\r\n      {selectedCategory && distinctData[selectedCategory] && (\r\n        <div>\r\n          <h2>{selectedCategory.charAt(0).toUpperCase() + selectedCategory.slice(1)}:</h2>\r\n\r\n          {distinctData[selectedCategory].map((item, index) => (\r\n            <div key={index}>\r\n              <FontAwesomeIcon icon={faMusic} /> {item}\r\n              <button onClick={() => deleteSong(item)}>Delete</button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetSong;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}