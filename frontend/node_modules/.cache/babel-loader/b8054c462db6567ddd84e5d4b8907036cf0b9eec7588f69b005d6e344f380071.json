{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN Stack\\\\frontend\\\\src\\\\components\\\\GetSong.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getSongsFetch } from '../songState/songsState';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from '@emotion/styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledList = styled.ul`\n  list-style-type: none;\n  cursor: pointer;\n`;\n_c = StyledList;\nconst GetSong = () => {\n  _s();\n  const dispatch = useDispatch();\n  const songs = useSelector(state => state.songs.songs);\n  const [displayedArtists, setDisplayedArtists] = useState([]);\n  useEffect(() => {\n    dispatch(getSongsFetch());\n  }, [dispatch]);\n  const handleArtistClick = artist => {\n    const distinctArtists = Array.from(new Set(songs.map(item => item.artist)));\n    setDisplayedArtists([artist]); // Set the displayed artist to the clicked artist\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Artists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledList, {\n      children: displayedArtists.map((artist, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleArtistClick(artist),\n        children: artist\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(GetSong, \"uS4c3G4WmyxbJ6kBH5nkukGUSRA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c2 = GetSong;\nexport default GetSong;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledList\");\n$RefreshReg$(_c2, \"GetSong\");","map":{"version":3,"names":["React","useEffect","useState","getSongsFetch","useDispatch","useSelector","styled","jsxDEV","_jsxDEV","StyledList","ul","_c","GetSong","_s","dispatch","songs","state","displayedArtists","setDisplayedArtists","handleArtistClick","artist","distinctArtists","Array","from","Set","map","item","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","_c2","$RefreshReg$"],"sources":["D:/MERN Stack/frontend/src/components/GetSong.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getSongsFetch, rootState } from '../songState/songsState';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from '@emotion/styled';\r\n\r\nconst StyledList = styled.ul`\r\n  list-style-type: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst GetSong: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const songs = useSelector((state: rootState) => state.songs.songs);\r\n  const [displayedArtists, setDisplayedArtists] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getSongsFetch());\r\n  }, [dispatch]);\r\n\r\n  const handleArtistClick = (artist: string) => {\r\n    const distinctArtists = Array.from(new Set(songs.map((item) => item.artist)));\r\n    setDisplayedArtists([artist]); // Set the displayed artist to the clicked artist\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Artists</h1>\r\n      <StyledList>\r\n        {displayedArtists.map((artist, index) => (\r\n          <li key={index} onClick={() => handleArtistClick(artist)}>\r\n            {artist}\r\n          </li>\r\n        ))}\r\n      </StyledList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetSong;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAmB,yBAAyB;AAClE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,UAAU,GAAGH,MAAM,CAACI,EAAG;AAC7B;AACA;AACA,CAAC;AAACC,EAAA,GAHIF,UAAU;AAKhB,MAAMG,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,KAAK,GAAGV,WAAW,CAAEW,KAAgB,IAAKA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EAClE,MAAM,CAACE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAW,EAAE,CAAC;EAEtED,SAAS,CAAC,MAAM;IACda,QAAQ,CAACX,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,CAACW,QAAQ,CAAC,CAAC;EAEd,MAAMK,iBAAiB,GAAIC,MAAc,IAAK;IAC5C,MAAMC,eAAe,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACT,KAAK,CAACU,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACN,MAAM,CAAC,CAAC,CAAC;IAC7EF,mBAAmB,CAAC,CAACE,MAAM,CAAC,CAAC,CAAC,CAAC;EACjC,CAAC;EAED,oBACEZ,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBvB,OAAA,CAACC,UAAU;MAAAkB,QAAA,EACRV,gBAAgB,CAACQ,GAAG,CAAC,CAACL,MAAM,EAAEY,KAAK,kBAClCxB,OAAA;QAAgByB,OAAO,EAAEA,CAAA,KAAMd,iBAAiB,CAACC,MAAM,CAAE;QAAAO,QAAA,EACtDP;MAAM,GADAY,KAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAAClB,EAAA,CA1BID,OAAiB;EAAA,QACJR,WAAW,EACdC,WAAW;AAAA;AAAA6B,GAAA,GAFrBtB,OAAiB;AA4BvB,eAAeA,OAAO;AAAC,IAAAD,EAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}