{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/songs'; // Update the API URL according to your server setup\nhttp;\nexport const fetchSongs = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch songs');\n  }\n};\nexport const createSong = async songData => {\n  try {\n    const response = await axios.post(`${API_URL}/add`, songData);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to create song');\n  }\n};\nexport const updateSong = async (id, songData) => {\n  try {\n    await axios.put(`${API_URL}/update/${id}`, songData);\n  } catch (error) {\n    throw new Error('Failed to update song');\n  }\n};\nexport const deleteSong = async id => {\n  try {\n    await axios.delete(`${API_URL}/delete/${id}`);\n  } catch (error) {\n    throw new Error('Failed to delete song');\n  }\n};\nexport const fetchStatistics = async statistics => {\n  try {\n    await axios.get(`/api/statistics`);\n  } catch (error) {\n    throw new Error('Failed to statistics of songs');\n  }\n};","map":{"version":3,"names":["axios","API_URL","http","fetchSongs","response","get","data","error","Error","createSong","songData","post","updateSong","id","put","deleteSong","delete","fetchStatistics","statistics"],"sources":["D:/MERN Stack/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = '/api/songs'; // Update the API URL according to your server setup\r\nhttp\r\nexport const fetchSongs = async () => {\r\n  try {\r\n    const response = await axios.get(API_URL);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to fetch songs');\r\n  }\r\n};\r\n\r\nexport const createSong = async (songData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/add`, songData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to create song');\r\n  }\r\n};\r\n\r\nexport const updateSong = async (id, songData) => {\r\n  try {\r\n    await axios.put(`${API_URL}/update/${id}`, songData);\r\n  } catch (error) {\r\n    throw new Error('Failed to update song');\r\n  }\r\n};\r\n\r\nexport const deleteSong = async (id) => {\r\n  try {\r\n    await axios.delete(`${API_URL}/delete/${id}`);\r\n  } catch (error) {\r\n    throw new Error('Failed to delete song');\r\n  }\r\n};\r\nexport const fetchStatistics  = async (statistics) => {\r\n  try {\r\n    await axios.get(`/api/statistics`);\r\n  } catch (error) {\r\n    throw new Error('Failed to statistics of songs');\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,YAAY,CAAC,CAAC;AAC9BC,IAAI;AACJ,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAACJ,OAAO,CAAC;IACzC,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC5C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMJ,KAAK,CAACW,IAAI,CAAE,GAAEV,OAAQ,MAAK,EAAES,QAAQ,CAAC;IAC7D,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF,CAAC;AAED,OAAO,MAAMI,UAAU,GAAG,MAAAA,CAAOC,EAAE,EAAEH,QAAQ,KAAK;EAChD,IAAI;IACF,MAAMV,KAAK,CAACc,GAAG,CAAE,GAAEb,OAAQ,WAAUY,EAAG,EAAC,EAAEH,QAAQ,CAAC;EACtD,CAAC,CAAC,OAAOH,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG,MAAOF,EAAE,IAAK;EACtC,IAAI;IACF,MAAMb,KAAK,CAACgB,MAAM,CAAE,GAAEf,OAAQ,WAAUY,EAAG,EAAC,CAAC;EAC/C,CAAC,CAAC,OAAON,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF,CAAC;AACD,OAAO,MAAMS,eAAe,GAAI,MAAOC,UAAU,IAAK;EACpD,IAAI;IACF,MAAMlB,KAAK,CAACK,GAAG,CAAE,iBAAgB,CAAC;EACpC,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAClD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}