{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { call, all, put, takeEvery } from \"redux-saga/effects\";\nimport { getSongsSuccess, getSongsFailure } from \"../songState/songsState\";\nimport axios from \"axios\";\nconst baseUrl = \"http://localhost:5000/api\";\nexport const getAllSongs = () => {\n  return axios.get(`${baseUrl}/songs`);\n};\nfunction* getSongs() {\n  try {\n    const response = yield call(getAllSongs);\n    const songs = response.data;\n    yield put(getSongsSuccess(songs));\n  } catch (e) {\n    yield put(getSongsFailure(e.message));\n  }\n}\n\n// watcher saga\nexport function* watcherSongSaga() {\n  yield takeEvery(\"songs/getSongsFetch\", getSongs);\n}\n\n//root saga\nexport default function* rootSaga() {\n  yield all([watcherSongSaga()]);\n}","map":{"version":3,"names":["call","all","put","takeEvery","getSongsSuccess","getSongsFailure","axios","baseUrl","getAllSongs","get","getSongs","response","songs","data","e","message","watcherSongSaga","rootSaga"],"sources":["D:/MERN Stack/frontend/src/saga/sagas.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\n\r\nimport { call, all, put, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n  getSongsSuccess,\r\n  getSongsFailure,\r\n\r\n} from \"../songState/songsState\";\r\nimport axios, { AxiosResponse } from \"axios\";\r\nconst baseUrl = \"http://localhost:5000/api\";\r\nimport { SongType, SongActionType } from \"../songState/songsState\";\r\n\r\nexport const getAllSongs = (): Promise<AxiosResponse<SongType[]>> => {\r\n  return axios.get<SongType[]>(`${baseUrl}/songs`);\r\n};\r\n\r\nfunction* getSongs() {\r\n  try {\r\n    const response: AxiosResponse<SongType[]> = yield call(getAllSongs);\r\n    const songs: SongType[] = response.data;\r\n    yield put(getSongsSuccess(songs));\r\n  } catch (e: any) {\r\n    yield put(getSongsFailure(e.message));\r\n  }\r\n}\r\n\r\n// watcher saga\r\nexport function* watcherSongSaga() {\r\n  yield takeEvery(\"songs/getSongsFetch\", getSongs);\r\n \r\n}\r\n\r\n\r\n//root saga\r\nexport default function* rootSaga() {\r\n  yield all([watcherSongSaga()]);\r\n}"],"mappings":"AAAA;;AAEA,SAASA,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;AAC9D,SACEC,eAAe,EACfC,eAAe,QAEV,yBAAyB;AAChC,OAAOC,KAAK,MAAyB,OAAO;AAC5C,MAAMC,OAAO,GAAG,2BAA2B;AAG3C,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAA0C;EACnE,OAAOF,KAAK,CAACG,GAAG,CAAc,GAAEF,OAAQ,QAAO,CAAC;AAClD,CAAC;AAED,UAAUG,QAAQA,CAAA,EAAG;EACnB,IAAI;IACF,MAAMC,QAAmC,GAAG,MAAMX,IAAI,CAACQ,WAAW,CAAC;IACnE,MAAMI,KAAiB,GAAGD,QAAQ,CAACE,IAAI;IACvC,MAAMX,GAAG,CAACE,eAAe,CAACQ,KAAK,CAAC,CAAC;EACnC,CAAC,CAAC,OAAOE,CAAM,EAAE;IACf,MAAMZ,GAAG,CAACG,eAAe,CAACS,CAAC,CAACC,OAAO,CAAC,CAAC;EACvC;AACF;;AAEA;AACA,OAAO,UAAUC,eAAeA,CAAA,EAAG;EACjC,MAAMb,SAAS,CAAC,qBAAqB,EAAEO,QAAQ,CAAC;AAElD;;AAGA;AACA,eAAe,UAAUO,QAAQA,CAAA,EAAG;EAClC,MAAMhB,GAAG,CAAC,CAACe,eAAe,CAAC,CAAC,CAAC,CAAC;AAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}