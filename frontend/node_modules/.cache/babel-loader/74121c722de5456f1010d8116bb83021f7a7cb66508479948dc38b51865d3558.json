{"ast":null,"code":"var _jsxFileName = \"E:\\\\MERN-Project\\\\frontend\\\\src\\\\components\\\\GetSong.tsx\",\n  _s = $RefreshSig$();\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React, { useState, useEffect } from 'react';\nimport { getSongsFetch } from '../songState/songsState';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMusic, faTrashAlt, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nconst itemStyle = css`\n  margin-bottom: 10px;\n`;\nconst buttonStyle = css`\n  margin-left: 5px;\n`;\nconst GetSong = () => {\n  _s();\n  const dispatch = useDispatch();\n  const songs = useSelector(state => state.songs.songs);\n  const [distinctData, setDistinctData] = useState({});\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const handleButtonClick = category => {\n    setSelectedCategory(selectedCategory === category ? null : category);\n    dispatch(getSongsFetch());\n  };\n  useEffect(() => {\n    if (songs && selectedCategory) {\n      const uniqueData = {\n        title: new Set(),\n        artist: new Set(),\n        album: new Set(),\n        genre: new Set()\n      };\n      songs.forEach(item => {\n        uniqueData.title.add(item.title);\n        uniqueData.artist.add(item.artist);\n        uniqueData.album.add(item.album);\n        uniqueData.genre.add(item.genre);\n      });\n      setDistinctData({\n        title: Array.from(uniqueData.title),\n        artist: Array.from(uniqueData.artist),\n        album: Array.from(uniqueData.album),\n        genre: Array.from(uniqueData.genre)\n      });\n    }\n  }, [songs, selectedCategory]);\n  const handleDelete = item => {\n    // Add your logic to dispatch an action to delete the item\n    console.log(`Deleting ${item}`);\n  };\n  const handleEdit = item => {\n    // Add your logic to dispatch an action to edit the item\n    console.log(`Editing ${item}`);\n  };\n  return _jsxDEV(\"div\", {\n    children: [_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('title'),\n      children: selectedCategory === 'title' ? 'Undo' : 'Titles'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), _jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('artist'),\n      children: selectedCategory === 'artist' ? 'Undo' : 'Artists'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), _jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('album'),\n      children: selectedCategory === 'album' ? 'Undo' : 'Albums'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), _jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('genre'),\n      children: selectedCategory === 'genre' ? 'Undo' : 'Genres'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), selectedCategory && distinctData[selectedCategory] && _jsxDEV(\"div\", {\n      children: [_jsxDEV(\"h2\", {\n        children: [selectedCategory.charAt(0).toUpperCase() + selectedCategory.slice(1), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), distinctData[selectedCategory].map((item, index) => _jsxDEV(\"div\", {\n        css: itemStyle,\n        children: [_jsxDEV(FontAwesomeIcon, {\n          icon: faMusic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), \" \", item, _jsxDEV(\"button\", {\n          onClick: () => handleEdit(item),\n          css: buttonStyle,\n          children: [_jsxDEV(FontAwesomeIcon, {\n            icon: faEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), \" Edit\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), _jsxDEV(\"button\", {\n          onClick: () => handleDelete(item),\n          css: buttonStyle,\n          children: [_jsxDEV(FontAwesomeIcon, {\n            icon: faTrashAlt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), \" Delete\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(GetSong, \"cuXfROrdLLozzC9hAxGEmUImB/A=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = GetSong;\nexport default GetSong;\nvar _c;\n$RefreshReg$(_c, \"GetSong\");","map":{"version":3,"names":["css","React","useState","useEffect","getSongsFetch","useDispatch","useSelector","FontAwesomeIcon","faMusic","faTrashAlt","faEdit","jsxDEV","_jsxDEV","itemStyle","buttonStyle","GetSong","_s","dispatch","songs","state","distinctData","setDistinctData","selectedCategory","setSelectedCategory","handleButtonClick","category","uniqueData","title","Set","artist","album","genre","forEach","item","add","Array","from","handleDelete","console","log","handleEdit","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","slice","map","index","icon","_c","$RefreshReg$"],"sources":["E:/MERN-Project/frontend/src/components/GetSong.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getSongsFetch, rootState } from '../songState/songsState';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMusic, faTrashAlt, faEdit } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst itemStyle = css`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst buttonStyle = css`\r\n  margin-left: 5px;\r\n`;\r\n\r\nconst GetSong: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const songs = useSelector((state: rootState) => state.songs.songs);\r\n  const [distinctData, setDistinctData] = useState<{ [key: string]: string[] }>({});\r\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\r\n\r\n  const handleButtonClick = (category: string) => {\r\n    setSelectedCategory(selectedCategory === category ? null : category);\r\n    dispatch(getSongsFetch());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (songs && selectedCategory) {\r\n      const uniqueData: { [key: string]: Set<string> } = {\r\n        title: new Set<string>(),\r\n        artist: new Set<string>(),\r\n        album: new Set<string>(),\r\n        genre: new Set<string>(),\r\n      };\r\n\r\n      songs.forEach((item) => {\r\n        uniqueData.title.add(item.title);\r\n        uniqueData.artist.add(item.artist);\r\n        uniqueData.album.add(item.album);\r\n        uniqueData.genre.add(item.genre);\r\n      });\r\n\r\n      setDistinctData({\r\n        title: Array.from(uniqueData.title),\r\n        artist: Array.from(uniqueData.artist),\r\n        album: Array.from(uniqueData.album),\r\n        genre: Array.from(uniqueData.genre),\r\n      });\r\n    }\r\n  }, [songs, selectedCategory]);\r\n\r\n  const handleDelete = (item: string) => {\r\n    // Add your logic to dispatch an action to delete the item\r\n    console.log(`Deleting ${item}`);\r\n  };\r\n\r\n  const handleEdit = (item: string) => {\r\n    // Add your logic to dispatch an action to edit the item\r\n    console.log(`Editing ${item}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => handleButtonClick('title')}>\r\n        {selectedCategory === 'title' ? 'Undo' : 'Titles'}\r\n      </button>\r\n\r\n      <button onClick={() => handleButtonClick('artist')}>\r\n        {selectedCategory === 'artist' ? 'Undo' : 'Artists'}\r\n      </button>\r\n\r\n      <button onClick={() => handleButtonClick('album')}>\r\n        {selectedCategory === 'album' ? 'Undo' : 'Albums'}\r\n      </button>\r\n\r\n      <button onClick={() => handleButtonClick('genre')}>\r\n        {selectedCategory === 'genre' ? 'Undo' : 'Genres'}\r\n      </button>\r\n\r\n      {selectedCategory && distinctData[selectedCategory] && (\r\n        <div>\r\n          <h2>{selectedCategory.charAt(0).toUpperCase() + selectedCategory.slice(1)}:</h2>\r\n\r\n          {distinctData[selectedCategory].map((item, index) => (\r\n            <div key={index} css={itemStyle}>\r\n              <FontAwesomeIcon icon={faMusic} /> {item}\r\n              <button onClick={() => handleEdit(item)} css={buttonStyle}>\r\n                <FontAwesomeIcon icon={faEdit} /> Edit\r\n              </button>\r\n              <button onClick={() => handleDelete(item)} css={buttonStyle}>\r\n                <FontAwesomeIcon icon={faTrashAlt} /> Delete\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetSong;\r\n"],"mappings":";;AAAA;AACA,SAASA,GAAG,QAAQ,gBAAgB;AACpC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAmB,yBAAyB;AAClE,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,OAAO,EAAEC,UAAU,EAAEC,MAAM,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,MAAMC,SAAS,GAAGb,GAAI;AACtB;AACA,CAAC;AAED,MAAMc,WAAW,GAAGd,GAAI;AACxB;AACA,CAAC;AAED,MAAMe,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,KAAK,GAAGZ,WAAW,CAAEa,KAAgB,IAAKA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EAClE,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAA8B,CAAC,CAAC,CAAC;EACjF,MAAM,CAACoB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrB,QAAQ,CAAgB,IAAI,CAAC;EAE7E,MAAMsB,iBAAiB,GAAIC,QAAgB,IAAK;IAC9CF,mBAAmB,CAACD,gBAAgB,KAAKG,QAAQ,GAAG,IAAI,GAAGA,QAAQ,CAAC;IACpER,QAAQ,CAACb,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC;EAEDD,SAAS,CAAC,MAAM;IACd,IAAIe,KAAK,IAAII,gBAAgB,EAAE;MAC7B,MAAMI,UAA0C,GAAG;QACjDC,KAAK,EAAE,IAAIC,GAAG,CAAS,CAAC;QACxBC,MAAM,EAAE,IAAID,GAAG,CAAS,CAAC;QACzBE,KAAK,EAAE,IAAIF,GAAG,CAAS,CAAC;QACxBG,KAAK,EAAE,IAAIH,GAAG,CAAS;MACzB,CAAC;MAEDV,KAAK,CAACc,OAAO,CAAEC,IAAI,IAAK;QACtBP,UAAU,CAACC,KAAK,CAACO,GAAG,CAACD,IAAI,CAACN,KAAK,CAAC;QAChCD,UAAU,CAACG,MAAM,CAACK,GAAG,CAACD,IAAI,CAACJ,MAAM,CAAC;QAClCH,UAAU,CAACI,KAAK,CAACI,GAAG,CAACD,IAAI,CAACH,KAAK,CAAC;QAChCJ,UAAU,CAACK,KAAK,CAACG,GAAG,CAACD,IAAI,CAACF,KAAK,CAAC;MAClC,CAAC,CAAC;MAEFV,eAAe,CAAC;QACdM,KAAK,EAAEQ,KAAK,CAACC,IAAI,CAACV,UAAU,CAACC,KAAK,CAAC;QACnCE,MAAM,EAAEM,KAAK,CAACC,IAAI,CAACV,UAAU,CAACG,MAAM,CAAC;QACrCC,KAAK,EAAEK,KAAK,CAACC,IAAI,CAACV,UAAU,CAACI,KAAK,CAAC;QACnCC,KAAK,EAAEI,KAAK,CAACC,IAAI,CAACV,UAAU,CAACK,KAAK;MACpC,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACb,KAAK,EAAEI,gBAAgB,CAAC,CAAC;EAE7B,MAAMe,YAAY,GAAIJ,IAAY,IAAK;IACrC;IACAK,OAAO,CAACC,GAAG,CAAE,YAAWN,IAAK,EAAC,CAAC;EACjC,CAAC;EAED,MAAMO,UAAU,GAAIP,IAAY,IAAK;IACnC;IACAK,OAAO,CAACC,GAAG,CAAE,WAAUN,IAAK,EAAC,CAAC;EAChC,CAAC;EAED,OACErB,OAAA;IAAA6B,QAAA,GACE7B,OAAA;MAAQ8B,OAAO,EAAEA,CAAA,KAAMlB,iBAAiB,CAAC,OAAO,CAAE;MAAAiB,QAAA,EAC/CnB,gBAAgB,KAAK,OAAO,GAAG,MAAM,GAAG;IAAQ;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EAETlC,OAAA;MAAQ8B,OAAO,EAAEA,CAAA,KAAMlB,iBAAiB,CAAC,QAAQ,CAAE;MAAAiB,QAAA,EAChDnB,gBAAgB,KAAK,QAAQ,GAAG,MAAM,GAAG;IAAS;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,EAETlC,OAAA;MAAQ8B,OAAO,EAAEA,CAAA,KAAMlB,iBAAiB,CAAC,OAAO,CAAE;MAAAiB,QAAA,EAC/CnB,gBAAgB,KAAK,OAAO,GAAG,MAAM,GAAG;IAAQ;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EAETlC,OAAA;MAAQ8B,OAAO,EAAEA,CAAA,KAAMlB,iBAAiB,CAAC,OAAO,CAAE;MAAAiB,QAAA,EAC/CnB,gBAAgB,KAAK,OAAO,GAAG,MAAM,GAAG;IAAQ;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EAERxB,gBAAgB,IAAIF,YAAY,CAACE,gBAAgB,CAAC,IACjDV,OAAA;MAAA6B,QAAA,GACE7B,OAAA;QAAA6B,QAAA,GAAKnB,gBAAgB,CAACyB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG1B,gBAAgB,CAAC2B,KAAK,CAAC,CAAC,CAAC,EAAC,GAAC;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAE/E1B,YAAY,CAACE,gBAAgB,CAAC,CAAC4B,GAAG,CAAC,CAACjB,IAAI,EAAEkB,KAAK,KAC9CvC,OAAA;QAAiBZ,GAAG,EAAEa,SAAU;QAAA4B,QAAA,GAC9B7B,OAAA,CAACL,eAAe;UAAC6C,IAAI,EAAE5C;QAAQ;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC,EAACb,IAAI,EACxCrB,OAAA;UAAQ8B,OAAO,EAAEA,CAAA,KAAMF,UAAU,CAACP,IAAI,CAAE;UAACjC,GAAG,EAAEc,WAAY;UAAA2B,QAAA,GACxD7B,OAAA,CAACL,eAAe;YAAC6C,IAAI,EAAE1C;UAAO;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,SACnC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACTlC,OAAA;UAAQ8B,OAAO,EAAEA,CAAA,KAAML,YAAY,CAACJ,IAAI,CAAE;UAACjC,GAAG,EAAEc,WAAY;UAAA2B,QAAA,GAC1D7B,OAAA,CAACL,eAAe;YAAC6C,IAAI,EAAE3C;UAAW;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,WACvC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAPDK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAnFID,OAAiB;EAAA,QACJV,WAAW,EACdC,WAAW;AAAA;AAAA+C,EAAA,GAFrBtC,OAAiB;AAqFvB,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}