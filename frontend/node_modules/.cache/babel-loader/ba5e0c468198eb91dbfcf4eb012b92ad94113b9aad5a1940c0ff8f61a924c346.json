{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport createSagaMiddleWare from \"redux-saga\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport songReducer from \"./songState/songsState\";\nimport rootSaga from \"./saga/sagas\";\nconst saga = createSagaMiddleWare();\nconst store = configureStore({\n  reducer: {\n    songs: songReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(saga)\n});\nsaga.run(rootSaga);\nexport default store;","map":{"version":3,"names":["createSagaMiddleWare","configureStore","songReducer","rootSaga","saga","store","reducer","songs","middleware","getDefaultMiddleware","concat","run"],"sources":["D:/MERN Stack/frontend/src/store.tsx"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport createSagaMiddleWare from \"redux-saga\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport songReducer from \"./songState/songsState\";\r\nimport rootSaga from \"./saga/sagas\";\r\nimport { addRootSaga } from \"./saga/sagas\";\r\n\r\nconst saga = createSagaMiddleWare();\r\nconst store = configureStore({\r\n  reducer: {\r\n    songs: songReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(saga),\r\n});\r\n\r\nsaga.run(rootSaga );\r\nexport default store;"],"mappings":"AAAA;AACA,OAAOA,oBAAoB,MAAM,YAAY;AAC7C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,QAAQ,MAAM,cAAc;AAGnC,MAAMC,IAAI,GAAGJ,oBAAoB,CAAC,CAAC;AACnC,MAAMK,KAAK,GAAGJ,cAAc,CAAC;EAC3BK,OAAO,EAAE;IACPC,KAAK,EAAEL;EACT,CAAC;EACDM,UAAU,EAAGC,oBAAoB,IAAKA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACN,IAAI;AAC1E,CAAC,CAAC;AAEFA,IAAI,CAACO,GAAG,CAACR,QAAS,CAAC;AACnB,eAAeE,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}