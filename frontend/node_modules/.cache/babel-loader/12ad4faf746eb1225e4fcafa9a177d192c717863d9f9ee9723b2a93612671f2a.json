{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN Stack\\\\frontend\\\\src\\\\components\\\\GetSong.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getSongsFetch } from '../songState/songsState';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from '@emotion/styled';\n\n// interface SongType {\n//   [key: string]: string | undefined;\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledButton = styled.button`\n  background-color: #3498db;\n  color: #ffffff;\n  border: none;\n  margin: 5px;\n  padding: 8px;\n  cursor: pointer;\n`;\n_c = StyledButton;\nconst StyledDropdown = styled.select`\n  margin-top: 10px;\n  padding: 5px;\n`;\n_c2 = StyledDropdown;\nconst GetSong = () => {\n  _s();\n  const dispatch = useDispatch();\n  const songs = useSelector(state => state.songs.songs);\n  const properties = ['Title', 'Artist', 'Album', 'Genre'];\n  const [selectedProperty, setSelectedProperty] = useState(null);\n  const [distinctValues, setDistinctValues] = useState([]);\n  useEffect(() => {\n    dispatch(getSongsFetch());\n  }, [dispatch]);\n  const handlePropertyClick = property => {\n    setSelectedProperty(property);\n    const values = Array.from(new Set(songs.map(item => {\n      var _item$property;\n      return String((_item$property = item[property]) !== null && _item$property !== void 0 ? _item$property : '');\n    })));\n    setDistinctValues(values);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Properties\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: properties.map((property, index) => /*#__PURE__*/_jsxDEV(StyledButton, {\n        onClick: () => handlePropertyClick(property),\n        children: property\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), selectedProperty && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedProperty, \" Values\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledDropdown, {\n        children: distinctValues.map((value, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: value\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(GetSong, \"4BerY8PHIWbO160qDEPEZqdj0U4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c3 = GetSong;\nexport default GetSong;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledButton\");\n$RefreshReg$(_c2, \"StyledDropdown\");\n$RefreshReg$(_c3, \"GetSong\");","map":{"version":3,"names":["React","useEffect","useState","getSongsFetch","useDispatch","useSelector","styled","jsxDEV","_jsxDEV","StyledButton","button","_c","StyledDropdown","select","_c2","GetSong","_s","dispatch","songs","state","properties","selectedProperty","setSelectedProperty","distinctValues","setDistinctValues","handlePropertyClick","property","values","Array","from","Set","map","item","_item$property","String","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","value","_c3","$RefreshReg$"],"sources":["D:/MERN Stack/frontend/src/components/GetSong.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getSongsFetch, rootState } from '../songState/songsState';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from '@emotion/styled';\r\n\r\n// interface SongType {\r\n//   [key: string]: string | undefined;\r\n// }\r\n\r\nconst StyledButton = styled.button`\r\n  background-color: #3498db;\r\n  color: #ffffff;\r\n  border: none;\r\n  margin: 5px;\r\n  padding: 8px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst StyledDropdown = styled.select`\r\n  margin-top: 10px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst GetSong: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const songs = useSelector((state: rootState) => state.songs.songs);\r\n  const properties = ['Title', 'Artist', 'Album', 'Genre'];\r\n  const [selectedProperty, setSelectedProperty] = useState<string | null>(null);\r\n  const [distinctValues, setDistinctValues] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getSongsFetch());\r\n  }, [dispatch]);\r\n\r\n  const handlePropertyClick = (property: string) => {\r\n    setSelectedProperty(property);\r\n    const values = Array.from(new Set(songs.map((item: SongType) => String(item[property] ?? ''))));\r\n    setDistinctValues(values);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Properties</h1>\r\n      <div>\r\n        {properties.map((property, index) => (\r\n          <StyledButton key={index} onClick={() => handlePropertyClick(property)}>\r\n            {property}\r\n          </StyledButton>\r\n        ))}\r\n      </div>\r\n      {selectedProperty && (\r\n        <div>\r\n          <h2>{selectedProperty} Values</h2>\r\n          <StyledDropdown>\r\n            {distinctValues.map((value, index) => (\r\n              <option key={index}>{value}</option>\r\n            ))}\r\n          </StyledDropdown>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetSong;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}