{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN Stack\\\\frontend\\\\src\\\\index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { createBrowserRouter, createRoutesFromElements, Route, RouterProvider } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\nimport SongList from './components/SongList';\n// import Statistics from './components/Statistics';\n// import SongForm from './components/SongForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 30\n  }, this),\n  children: /*#__PURE__*/_jsxDEV(Route, {\n    index: true,\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(SongList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 45\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 21,\n  columnNumber: 5\n}, this)));\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","Provider","createBrowserRouter","createRoutesFromElements","Route","RouterProvider","App","reportWebVitals","store","SongList","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","root","createRoot","document","getElementById","render","StrictMode"],"sources":["D:/MERN Stack/frontend/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport { \n  createBrowserRouter, \n  createRoutesFromElements, \n  Route, \n  RouterProvider } from 'react-router-dom';\n\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\nimport SongList from './components/SongList';\n// import Statistics from './components/Statistics';\n// import SongForm from './components/SongForm';\n\nconst router = createBrowserRouter(\n  createRoutesFromElements(\n    <Route path='/' element={<App />}>\n      <Route index={true} path='/' element={<SongList />} ></Route>\n      {/* <Route path='/Statistics' element={<Statistics />} ></Route>\n      <Route path='/' element={<SongForm />} ></Route> */}\n    </Route>\n  )\n)\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <RouterProvider router={router} />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,aAAa;AACtC,SACEC,mBAAmB,EACnBC,wBAAwB,EACxBC,KAAK,EACLC,cAAc,QAAQ,kBAAkB;AAG1C,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,MAAM,GAAGV,mBAAmB,CAChCC,wBAAwB,eACtBQ,OAAA,CAACP,KAAK;EAACS,IAAI,EAAC,GAAG;EAACC,OAAO,eAAEH,OAAA,CAACL,GAAG;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAE;EAAAC,QAAA,eAC/BR,OAAA,CAACP,KAAK;IAACgB,KAAK,EAAE,IAAK;IAACP,IAAI,EAAC,GAAG;IAACC,OAAO,eAAEH,OAAA,CAACF,QAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAS;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAGxD,CACT,CACF,CAAC;AAED,MAAMG,IAAI,GAAGrB,QAAQ,CAACsB,UAAU,CAC9BC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;AACDH,IAAI,CAACI,MAAM,eACTd,OAAA,CAACZ,KAAK,CAAC2B,UAAU;EAAAP,QAAA,eACfR,OAAA,CAACV,QAAQ;IAACO,KAAK,EAAEA,KAAM;IAAAW,QAAA,eACrBR,OAAA,CAACN,cAAc;MAACO,MAAM,EAAEA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACK,CACpB,CAAC;;AAED;AACA;AACA;AACAX,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}