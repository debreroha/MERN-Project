{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n// import { SongsState } from \"./SongType\";\n\nconst initialState = {\n  songs: [],\n  isLoading: false,\n  errorMessage: null\n};\nconst songsSlice = createSlice({\n  name: \"songs\",\n  initialState,\n  reducers: {\n    // get songs actions\n    getSongsFetch: state => {\n      state.isLoading = true;\n      state.errorMessage = null;\n    },\n    getSongsSuccess: (state, action) => {\n      state.isLoading = false;\n      state.songs = action.payload;\n    },\n    getSongsFailure: (state, action) => {\n      state.isLoading = false;\n      state.errorMessage = action.payload;\n    },\n    // add song actions\n    addSongFetch: state => {\n      state.isLoading = true;\n      state.errorMessage = null;\n    },\n    addSongSuccess: (state, action) => {\n      state.isLoading = false;\n      state.songs.push(action.payload);\n    },\n    addSongFailure: (state, action) => {\n      state.isLoading = false;\n      state.errorMessage = action.payload;\n    },\n    // edit song actions\n    editSongFetch: state => {\n      state.isLoading = true;\n      state.errorMessage = null;\n    },\n    editSongSuccess: (state, action) => {\n      const updatedSong = action.payload;\n      const songIndex = state.songs.findIndex(song => song._id === updatedSong._id);\n      if (songIndex !== -1) {\n        state.songs[songIndex] = updatedSong;\n        state.isLoading = false;\n        state.errorMessage = null;\n      }\n    },\n    editSongFailure: (state, action) => {\n      state.isLoading = false;\n      state.errorMessage = action.payload;\n    },\n    // delete song actions\n    deleteSongFetch: state => {\n      state.isLoading = true;\n      state.errorMessage = null;\n    },\n    deleteSongSuccess: (state, action) => {\n      const songId = action.payload;\n      state.isLoading = false;\n      state.songs = state.songs.filter(song => song._id !== songId);\n      state.errorMessage = null;\n    },\n    deleteSongFailure: (state, action) => {\n      state.isLoading = false;\n      state.errorMessage = action.payload;\n    }\n  }\n});\nexport const {\n  getSongsFetch,\n  getSongsSuccess,\n  getSongsFailure,\n  addSongFetch,\n  addSongSuccess,\n  addSongFailure,\n  editSongFetch,\n  editSongSuccess,\n  editSongFailure,\n  deleteSongFetch,\n  deleteSongSuccess,\n  deleteSongFailure\n} = songsSlice.actions;\nexport default songsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","songs","isLoading","errorMessage","songsSlice","name","reducers","getSongsFetch","state","getSongsSuccess","action","payload","getSongsFailure","addSongFetch","addSongSuccess","push","addSongFailure","editSongFetch","editSongSuccess","updatedSong","songIndex","findIndex","song","_id","editSongFailure","deleteSongFetch","deleteSongSuccess","songId","filter","deleteSongFailure","actions","reducer"],"sources":["D:/MERN Stack/frontend/src/songState/songsState.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n// import { SongsState } from \"./SongType\";\r\n\r\nexport interface SongType {\r\n    _id?: string;\r\n    title: string;\r\n    artist: string;\r\n    album: string;\r\n    genre: string;\r\n    createdAt?: Date;\r\n    updatedAt?: Date;\r\n  }\r\n  \r\n  export interface SongsState {\r\n    songs: SongType[];\r\n    isLoading: boolean;\r\n    errorMessage: string | null;\r\n  }\r\n  \r\n  export interface rootState {\r\n    songs: SongsState;\r\n  }\r\n  \r\n  export interface SongActionType {\r\n    type: string;\r\n    payload: SongType;\r\n  }\r\n\r\nconst initialState: SongsState = {\r\n  songs: [],\r\n  isLoading: false,\r\n  errorMessage: null,\r\n};\r\n\r\nconst songsSlice = createSlice({\r\n  name: \"songs\",\r\n  initialState,\r\n  reducers: {\r\n    // get songs actions\r\n    getSongsFetch: (state) => {\r\n      state.isLoading = true;\r\n      state.errorMessage = null;\r\n    },\r\n    getSongsSuccess: (state, action) => {\r\n      state.isLoading = false;\r\n      state.songs = action.payload;\r\n    },\r\n    getSongsFailure: (state, action) => {\r\n      state.isLoading = false;\r\n      state.errorMessage = action.payload;\r\n    },\r\n    // add song actions\r\n    addSongFetch: (state) => {\r\n      state.isLoading = true;\r\n      state.errorMessage = null;\r\n    },\r\n    addSongSuccess: (state, action) => {\r\n      state.isLoading = false;\r\n      state.songs.push(action.payload);\r\n    },\r\n    addSongFailure: (state, action) => {\r\n      state.isLoading = false;\r\n      state.errorMessage = action.payload;\r\n    },\r\n\r\n    // edit song actions\r\n    editSongFetch: (state) => {\r\n      state.isLoading = true;\r\n      state.errorMessage = null;\r\n    },\r\n    editSongSuccess: (state, action) => {\r\n      const updatedSong = action.payload;\r\n      const songIndex = state.songs.findIndex(\r\n        (song) => song._id === updatedSong._id\r\n      );\r\n\r\n      if (songIndex !== -1) {\r\n        state.songs[songIndex] = updatedSong;\r\n        state.isLoading = false;\r\n        state.errorMessage = null;\r\n      }\r\n    },\r\n    editSongFailure: (state, action) => {\r\n      state.isLoading = false;\r\n      state.errorMessage = action.payload;\r\n    },\r\n\r\n    // delete song actions\r\n    deleteSongFetch: (state) => {\r\n      state.isLoading = true;\r\n      state.errorMessage = null;\r\n    },\r\n    deleteSongSuccess: (state, action) => {\r\n      const songId = action.payload;\r\n      state.isLoading = false;\r\n      state.songs = state.songs.filter((song) => song._id !== songId);\r\n      state.errorMessage = null;\r\n    },\r\n    deleteSongFailure: (state, action) => {\r\n      state.isLoading = false;\r\n      state.errorMessage = action.payload;\r\n    },\r\n    \r\n  },\r\n});\r\n\r\nexport const {\r\n  getSongsFetch,\r\n  getSongsSuccess,\r\n  getSongsFailure,\r\n  addSongFetch,\r\n  addSongSuccess,\r\n  addSongFailure,\r\n  editSongFetch,\r\n  editSongSuccess,\r\n  editSongFailure,\r\n  deleteSongFetch,\r\n  deleteSongSuccess,\r\n  deleteSongFailure,\r\n} = songsSlice.actions;\r\n\r\nexport default songsSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}