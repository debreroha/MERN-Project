{"ast":null,"code":"var _jsxFileName = \"E:\\\\MERN-Project\\\\frontend\\\\src\\\\components\\\\GetSong.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getSongsFetch, addSongFetch, editSongFetch, deleteSongFetch } from '../songState/songsState';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GetSong = () => {\n  _s();\n  const dispatch = useDispatch();\n  const songs = useSelector(state => state.songs.songs);\n  const [distinctData, setDistinctData] = useState({});\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const handleButtonClick = category => {\n    setSelectedCategory(selectedCategory === category ? null : category);\n    dispatch(getSongsFetch());\n  };\n  const handleAddSong = () => {\n    const newSong = {\n      title: 'New Song',\n      artist: 'New Artist',\n      album: 'New Album',\n      genre: 'New Genre'\n    };\n    dispatch(addSongFetch(newSong));\n  };\n  const handleEditSong = (index, field, newValue) => {\n    const editedSong = {\n      ...songs[index],\n      [field]: newValue\n    };\n    dispatch(editSongFetch(index, editedSong));\n  };\n  const handleDeleteSong = index => {\n    dispatch(deleteSongFetch(index));\n  };\n  useEffect(() => {\n    if (songs && selectedCategory) {\n      const uniqueData = {\n        title: new Set(),\n        artist: new Set(),\n        album: new Set(),\n        genre: new Set()\n      };\n      songs.forEach(item => {\n        uniqueData.title.add(item.title);\n        uniqueData.artist.add(item.artist);\n        uniqueData.album.add(item.album);\n        uniqueData.genre.add(item.genre);\n      });\n      setDistinctData({\n        title: Array.from(uniqueData.title),\n        artist: Array.from(uniqueData.artist),\n        album: Array.from(uniqueData.album),\n        genre: Array.from(uniqueData.genre)\n      });\n    }\n  }, [songs, selectedCategory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('title'),\n      children: selectedCategory === 'title' ? 'Undo' : 'Titles'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('artist'),\n      children: selectedCategory === 'artist' ? 'Undo' : 'Artists'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('album'),\n      children: selectedCategory === 'album' ? 'Undo' : 'Albums'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('genre'),\n      children: selectedCategory === 'genre' ? 'Undo' : 'Genres'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), selectedCategory && distinctData[selectedCategory] && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedCategory.charAt(0).toUpperCase() + selectedCategory.slice(1), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), distinctData[selectedCategory].map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-music\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), \"\\uD83C\\uDFB5 \", item, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditSong(index, selectedCategory, 'New Value'),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteSong(index),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddSong,\n      children: \"Add Song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(GetSong, \"cuXfROrdLLozzC9hAxGEmUImB/A=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = GetSong;\nexport default GetSong;\nvar _c;\n$RefreshReg$(_c, \"GetSong\");","map":{"version":3,"names":["React","useState","useEffect","getSongsFetch","addSongFetch","editSongFetch","deleteSongFetch","useDispatch","useSelector","jsxDEV","_jsxDEV","GetSong","_s","dispatch","songs","state","distinctData","setDistinctData","selectedCategory","setSelectedCategory","handleButtonClick","category","handleAddSong","newSong","title","artist","album","genre","handleEditSong","index","field","newValue","editedSong","handleDeleteSong","uniqueData","Set","forEach","item","add","Array","from","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","slice","map","className","_c","$RefreshReg$"],"sources":["E:/MERN-Project/frontend/src/components/GetSong.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getSongsFetch, addSongFetch, editSongFetch, deleteSongFetch, rootState } from '../songState/songsState';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst GetSong: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const songs = useSelector((state: rootState) => state.songs.songs);\r\n  const [distinctData, setDistinctData] = useState<{ [key: string]: string[] }>({});\r\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\r\n\r\n  const handleButtonClick = (category: string) => {\r\n    setSelectedCategory(selectedCategory === category ? null : category);\r\n    dispatch(getSongsFetch());\r\n  };\r\n\r\n  const handleAddSong = () => {\r\n    const newSong = {\r\n      title: 'New Song',\r\n      artist: 'New Artist',\r\n      album: 'New Album',\r\n      genre: 'New Genre',\r\n    };\r\n\r\n    dispatch(addSongFetch(newSong));\r\n  };\r\n\r\n  const handleEditSong = (index: number, field: string, newValue: string) => {\r\n    const editedSong = { ...songs[index], [field]: newValue };\r\n    dispatch(editSongFetch(index, editedSong));\r\n  };\r\n\r\n  const handleDeleteSong = (index: number) => {\r\n    dispatch(deleteSongFetch(index));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (songs && selectedCategory) {\r\n      const uniqueData: { [key: string]: Set<string> } = {\r\n        title: new Set<string>(),\r\n        artist: new Set<string>(),\r\n        album: new Set<string>(),\r\n        genre: new Set<string>(),\r\n      };\r\n\r\n      songs.forEach((item) => {\r\n        uniqueData.title.add(item.title);\r\n        uniqueData.artist.add(item.artist);\r\n        uniqueData.album.add(item.album);\r\n        uniqueData.genre.add(item.genre);\r\n      });\r\n\r\n      setDistinctData({\r\n        title: Array.from(uniqueData.title),\r\n        artist: Array.from(uniqueData.artist),\r\n        album: Array.from(uniqueData.album),\r\n        genre: Array.from(uniqueData.genre),\r\n      });\r\n    }\r\n  }, [songs, selectedCategory]);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => handleButtonClick('title')}>\r\n        {selectedCategory === 'title' ? 'Undo' : 'Titles'}\r\n      </button>\r\n\r\n      <button onClick={() => handleButtonClick('artist')}>\r\n        {selectedCategory === 'artist' ? 'Undo' : 'Artists'}\r\n      </button>\r\n\r\n      <button onClick={() => handleButtonClick('album')}>\r\n        {selectedCategory === 'album' ? 'Undo' : 'Albums'}\r\n      </button>\r\n\r\n      <button onClick={() => handleButtonClick('genre')}>\r\n        {selectedCategory === 'genre' ? 'Undo' : 'Genres'}\r\n      </button>\r\n\r\n      {selectedCategory && distinctData[selectedCategory] && (\r\n        <div>\r\n          <h2>{selectedCategory.charAt(0).toUpperCase() + selectedCategory.slice(1)}:</h2>\r\n          {distinctData[selectedCategory].map((item, index) => (\r\n            <div key={index}>\r\n              <i className=\"fas fa-music\"></i>ðŸŽµ {item}\r\n              <button onClick={() => handleEditSong(index, selectedCategory, 'New Value')}>\r\n                Edit\r\n              </button>\r\n              <button onClick={() => handleDeleteSong(index)}>Delete</button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <button onClick={handleAddSong}>Add Song</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetSong;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,EAAEC,YAAY,EAAEC,aAAa,EAAEC,eAAe,QAAmB,yBAAyB;AAChH,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvD,MAAMC,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,KAAK,GAAGN,WAAW,CAAEO,KAAgB,IAAKA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EAClE,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAA8B,CAAC,CAAC,CAAC;EACjF,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAgB,IAAI,CAAC;EAE7E,MAAMmB,iBAAiB,GAAIC,QAAgB,IAAK;IAC9CF,mBAAmB,CAACD,gBAAgB,KAAKG,QAAQ,GAAG,IAAI,GAAGA,QAAQ,CAAC;IACpER,QAAQ,CAACV,aAAa,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMmB,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,OAAO,GAAG;MACdC,KAAK,EAAE,UAAU;MACjBC,MAAM,EAAE,YAAY;MACpBC,KAAK,EAAE,WAAW;MAClBC,KAAK,EAAE;IACT,CAAC;IAEDd,QAAQ,CAACT,YAAY,CAACmB,OAAO,CAAC,CAAC;EACjC,CAAC;EAED,MAAMK,cAAc,GAAGA,CAACC,KAAa,EAAEC,KAAa,EAAEC,QAAgB,KAAK;IACzE,MAAMC,UAAU,GAAG;MAAE,GAAGlB,KAAK,CAACe,KAAK,CAAC;MAAE,CAACC,KAAK,GAAGC;IAAS,CAAC;IACzDlB,QAAQ,CAACR,aAAa,CAACwB,KAAK,EAAEG,UAAU,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMC,gBAAgB,GAAIJ,KAAa,IAAK;IAC1ChB,QAAQ,CAACP,eAAe,CAACuB,KAAK,CAAC,CAAC;EAClC,CAAC;EAED3B,SAAS,CAAC,MAAM;IACd,IAAIY,KAAK,IAAII,gBAAgB,EAAE;MAC7B,MAAMgB,UAA0C,GAAG;QACjDV,KAAK,EAAE,IAAIW,GAAG,CAAS,CAAC;QACxBV,MAAM,EAAE,IAAIU,GAAG,CAAS,CAAC;QACzBT,KAAK,EAAE,IAAIS,GAAG,CAAS,CAAC;QACxBR,KAAK,EAAE,IAAIQ,GAAG,CAAS;MACzB,CAAC;MAEDrB,KAAK,CAACsB,OAAO,CAAEC,IAAI,IAAK;QACtBH,UAAU,CAACV,KAAK,CAACc,GAAG,CAACD,IAAI,CAACb,KAAK,CAAC;QAChCU,UAAU,CAACT,MAAM,CAACa,GAAG,CAACD,IAAI,CAACZ,MAAM,CAAC;QAClCS,UAAU,CAACR,KAAK,CAACY,GAAG,CAACD,IAAI,CAACX,KAAK,CAAC;QAChCQ,UAAU,CAACP,KAAK,CAACW,GAAG,CAACD,IAAI,CAACV,KAAK,CAAC;MAClC,CAAC,CAAC;MAEFV,eAAe,CAAC;QACdO,KAAK,EAAEe,KAAK,CAACC,IAAI,CAACN,UAAU,CAACV,KAAK,CAAC;QACnCC,MAAM,EAAEc,KAAK,CAACC,IAAI,CAACN,UAAU,CAACT,MAAM,CAAC;QACrCC,KAAK,EAAEa,KAAK,CAACC,IAAI,CAACN,UAAU,CAACR,KAAK,CAAC;QACnCC,KAAK,EAAEY,KAAK,CAACC,IAAI,CAACN,UAAU,CAACP,KAAK;MACpC,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACb,KAAK,EAAEI,gBAAgB,CAAC,CAAC;EAE7B,oBACER,OAAA;IAAA+B,QAAA,gBACE/B,OAAA;MAAQgC,OAAO,EAAEA,CAAA,KAAMtB,iBAAiB,CAAC,OAAO,CAAE;MAAAqB,QAAA,EAC/CvB,gBAAgB,KAAK,OAAO,GAAG,MAAM,GAAG;IAAQ;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eAETpC,OAAA;MAAQgC,OAAO,EAAEA,CAAA,KAAMtB,iBAAiB,CAAC,QAAQ,CAAE;MAAAqB,QAAA,EAChDvB,gBAAgB,KAAK,QAAQ,GAAG,MAAM,GAAG;IAAS;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eAETpC,OAAA;MAAQgC,OAAO,EAAEA,CAAA,KAAMtB,iBAAiB,CAAC,OAAO,CAAE;MAAAqB,QAAA,EAC/CvB,gBAAgB,KAAK,OAAO,GAAG,MAAM,GAAG;IAAQ;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eAETpC,OAAA;MAAQgC,OAAO,EAAEA,CAAA,KAAMtB,iBAAiB,CAAC,OAAO,CAAE;MAAAqB,QAAA,EAC/CvB,gBAAgB,KAAK,OAAO,GAAG,MAAM,GAAG;IAAQ;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EAER5B,gBAAgB,IAAIF,YAAY,CAACE,gBAAgB,CAAC,iBACjDR,OAAA;MAAA+B,QAAA,gBACE/B,OAAA;QAAA+B,QAAA,GAAKvB,gBAAgB,CAAC6B,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG9B,gBAAgB,CAAC+B,KAAK,CAAC,CAAC,CAAC,EAAC,GAAC;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC/E9B,YAAY,CAACE,gBAAgB,CAAC,CAACgC,GAAG,CAAC,CAACb,IAAI,EAAER,KAAK,kBAC9CnB,OAAA;QAAA+B,QAAA,gBACE/B,OAAA;UAAGyC,SAAS,EAAC;QAAc;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,iBAAG,EAACT,IAAI,eACxC3B,OAAA;UAAQgC,OAAO,EAAEA,CAAA,KAAMd,cAAc,CAACC,KAAK,EAAEX,gBAAgB,EAAE,WAAW,CAAE;UAAAuB,QAAA,EAAC;QAE7E;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTpC,OAAA;UAAQgC,OAAO,EAAEA,CAAA,KAAMT,gBAAgB,CAACJ,KAAK,CAAE;UAAAY,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GALvDjB,KAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eAEDpC,OAAA;MAAQgC,OAAO,EAAEpB,aAAc;MAAAmB,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAAClC,EAAA,CA5FID,OAAiB;EAAA,QACJJ,WAAW,EACdC,WAAW;AAAA;AAAA4C,EAAA,GAFrBzC,OAAiB;AA8FvB,eAAeA,OAAO;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}