{"ast":null,"code":"import axios from 'axios';\nconst API_URL = axios.create({\n  baseURL: 'http://localhost:5000/api/songs' // Replace with your backend API URL\n});\nexport const fetchSongs = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    console.log(response.data);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to fetch songs');\n  }\n};\nexport const createSong = async songData => {\n  try {\n    const response = await axios.post(`${API_URL}/add`, songData);\n    return response.data;\n  } catch (error) {\n    throw new Error('Failed to create song');\n  }\n};\nexport const updateSong = async (id, songData) => {\n  try {\n    await axios.put(`${API_URL}/update/${id}`, songData);\n  } catch (error) {\n    throw new Error('Failed to update song');\n  }\n};\nexport const deleteSong = async id => {\n  try {\n    await axios.delete(`${API_URL}/delete/${id}`);\n  } catch (error) {\n    throw new Error('Failed to delete song');\n  }\n};\n// export const fetchStatistics  = async (statistics) => {\n//   try {\n//     await axios.get(`http://localhost:5000/api/statistics`);\n//   } catch (error) {\n//     throw new Error('Failed to statistics of songs');\n//   }\n// };","map":{"version":3,"names":["axios","API_URL","create","baseURL","fetchSongs","response","get","console","log","data","error","Error","createSong","songData","post","updateSong","id","put","deleteSong","delete"],"sources":["D:/MERN Stack/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = axios.create({\r\n  baseURL: 'http://localhost:5000/api/songs', // Replace with your backend API URL\r\n});\r\n\r\nexport const fetchSongs = async () => {\r\n  try {\r\n    const response = await axios.get(API_URL);\r\n    console.log(response.data)\r\n    return response.data;\r\n    \r\n  } catch (error) {\r\n    throw new Error('Failed to fetch songs');\r\n  }\r\n};\r\n\r\nexport const createSong = async (songData) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/add`, songData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Failed to create song');\r\n  }\r\n};\r\n\r\nexport const updateSong = async (id, songData) => {\r\n  try {\r\n    await axios.put(`${API_URL}/update/${id}`, songData);\r\n  } catch (error) {\r\n    throw new Error('Failed to update song');\r\n  }\r\n};\r\n\r\nexport const deleteSong = async (id) => {\r\n  try {\r\n    await axios.delete(`${API_URL}/delete/${id}`);\r\n  } catch (error) {\r\n    throw new Error('Failed to delete song');\r\n  }\r\n};\r\n// export const fetchStatistics  = async (statistics) => {\r\n//   try {\r\n//     await axios.get(`http://localhost:5000/api/statistics`);\r\n//   } catch (error) {\r\n//     throw new Error('Failed to statistics of songs');\r\n//   }\r\n// };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC3BC,OAAO,EAAE,iCAAiC,CAAE;AAC9C,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAACL,OAAO,CAAC;IACzCM,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;IAC1B,OAAOJ,QAAQ,CAACI,IAAI;EAEtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAQ,IAAK;EAC5C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAML,KAAK,CAACc,IAAI,CAAE,GAAEb,OAAQ,MAAK,EAAEY,QAAQ,CAAC;IAC7D,OAAOR,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF,CAAC;AAED,OAAO,MAAMI,UAAU,GAAG,MAAAA,CAAOC,EAAE,EAAEH,QAAQ,KAAK;EAChD,IAAI;IACF,MAAMb,KAAK,CAACiB,GAAG,CAAE,GAAEhB,OAAQ,WAAUe,EAAG,EAAC,EAAEH,QAAQ,CAAC;EACtD,CAAC,CAAC,OAAOH,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG,MAAOF,EAAE,IAAK;EACtC,IAAI;IACF,MAAMhB,KAAK,CAACmB,MAAM,CAAE,GAAElB,OAAQ,WAAUe,EAAG,EAAC,CAAC;EAC/C,CAAC,CAAC,OAAON,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}