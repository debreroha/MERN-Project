{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN Stack\\\\frontend\\\\src\\\\components\\\\SongForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addSong } from '../redux/songsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SongForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState({\n    title: '',\n    artist: '',\n    album: '',\n    genre: ''\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addSong(formData));\n    setFormData({\n      title: '',\n      artist: '',\n      album: '',\n      genre: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Apologies for the incomplete response. Here's the continuation of the code for Step 7: ```javascript\", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          value: formData.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Artist:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"artist\",\n          value: formData.artist,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Album:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"album\",\n          value: formData.album,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Genre:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"genre\",\n          value: formData.genre,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(SongForm, \"K2FmgQce5JhKElD7goKp7s+4/rw=\", false, function () {\n  return [useDispatch];\n});\n_c = SongForm;\nexport default SongForm;\nvar _c;\n$RefreshReg$(_c, \"SongForm\");","map":{"version":3,"names":["React","useState","useDispatch","addSong","jsxDEV","_jsxDEV","SongForm","_s","dispatch","formData","setFormData","title","artist","album","genre","handleChange","e","target","name","value","handleSubmit","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["D:/MERN Stack/frontend/src/components/SongForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addSong } from '../redux/songsSlice';\r\n\r\nconst SongForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    artist: '',\r\n    album: '',\r\n    genre: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addSong(formData));\r\n    setFormData({ title: '', artist: '', album: '', genre: '' });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n     Apologies for the incomplete response. Here's the continuation of the code for Step 7:\r\n\r\n```javascript\r\n      <h2>Add Song</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Title:\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            value={formData.title}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Artist:\r\n          <input\r\n            type=\"text\"\r\n            name=\"artist\"\r\n            value={formData.artist}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Album:\r\n          <input\r\n            type=\"text\"\r\n            name=\"album\"\r\n            value={formData.album}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label>\r\n          Genre:\r\n          <input\r\n            type=\"text\"\r\n            name=\"genre\"\r\n            value={formData.genre}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SongForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}