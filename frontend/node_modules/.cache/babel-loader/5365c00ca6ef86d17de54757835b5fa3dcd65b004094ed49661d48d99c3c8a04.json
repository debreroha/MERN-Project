{"ast":null,"code":"var _jsxFileName = \"E:\\\\MERN-Project\\\\frontend\\\\src\\\\components\\\\GetSong.tsx\",\n  _s = $RefreshSig$();\n/** @jsxImportSource @emotion/react */\n\nimport styled from '@emotion/styled';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n// Styled components\nconst Container = styled.div`\n  margin: 20px;\n`;\n_c = Container;\nconst ToggleButton = styled.button`\n  padding: 10px;\n  margin-bottom: 10px;\n  background-color: #4caf50;\n  color: white;\n  border: none;\n  cursor: pointer;\n`;\n_c2 = ToggleButton;\nconst Form = styled.form`\n  display: ${props => props.showForm ? 'block' : 'none'};\n  margin-top: 10px;\n`;\n_c3 = Form;\nconst FormLabel = styled.label`\n  display: block;\n  margin-bottom: 10px;\n`;\n_c4 = FormLabel;\nconst FormInput = styled.input`\n  width: 100%;\n  padding: 8px;\n  margin-top: 5px;\n  margin-bottom: 10px;\n  box-sizing: border-box;\n`;\n_c5 = FormInput;\nconst SubmitButton = styled.button`\n  background-color: #4caf50;\n  color: white;\n  padding: 10px;\n  border: none;\n  cursor: pointer;\n`;\n_c6 = SubmitButton;\nconst AddSong = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [newSong, setNewSong] = useState({\n    title: '',\n    artist: '',\n    album: '',\n    genre: ''\n  });\n\n  // State to track whether the form should be displayed\n  const [showForm, setShowForm] = useState(false);\n  const handleAddSong = () => {\n    dispatch({\n      type: 'songs/addSongFetch',\n      payload: {\n        title: newSong.title,\n        artist: newSong.artist,\n        album: newSong.album,\n        genre: newSong.genre\n      }\n    });\n    setNewSong({\n      title: '',\n      artist: '',\n      album: '',\n      genre: ''\n    });\n\n    // After adding the song, hide the form\n    setShowForm(false);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewSong(prevSong => ({\n      ...prevSong,\n      [name]: value\n    }));\n  };\n  return _jsxDEV(Container, {\n    children: [_jsxDEV(ToggleButton, {\n      type: \"button\",\n      onClick: () => setShowForm(!showForm),\n      children: showForm ? 'Hide Form' : 'Add Song'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), _jsxDEV(Form, {\n      showForm: showForm,\n      children: [_jsxDEV(FormLabel, {\n        children: [\"Title:\", _jsxDEV(FormInput, {\n          type: \"text\",\n          name: \"title\",\n          value: newSong.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), _jsxDEV(FormLabel, {\n        children: [\"Artist:\", _jsxDEV(FormInput, {\n          type: \"text\",\n          name: \"artist\",\n          value: newSong.artist,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), _jsxDEV(FormLabel, {\n        children: [\"Album:\", _jsxDEV(FormInput, {\n          type: \"text\",\n          name: \"album\",\n          value: newSong.album,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), _jsxDEV(FormLabel, {\n        children: [\"Genre:\", _jsxDEV(FormInput, {\n          type: \"text\",\n          name: \"genre\",\n          value: newSong.genre,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), _jsxDEV(SubmitButton, {\n        type: \"button\",\n        onClick: handleAddSong,\n        children: \"Add Song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(AddSong, \"N1jmDibef0SyPr2jqKugNkiYO0o=\", false, function () {\n  return [useDispatch];\n});\n_c7 = AddSong;\nexport default AddSong;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ToggleButton\");\n$RefreshReg$(_c3, \"Form\");\n$RefreshReg$(_c4, \"FormLabel\");\n$RefreshReg$(_c5, \"FormInput\");\n$RefreshReg$(_c6, \"SubmitButton\");\n$RefreshReg$(_c7, \"AddSong\");","map":{"version":3,"names":["styled","React","useState","useDispatch","jsxDEV","_jsxDEV","Container","div","_c","ToggleButton","button","_c2","Form","form","props","showForm","_c3","FormLabel","label","_c4","FormInput","input","_c5","SubmitButton","_c6","AddSong","_s","dispatch","newSong","setNewSong","title","artist","album","genre","setShowForm","handleAddSong","type","payload","handleChange","e","name","value","target","prevSong","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","_c7","$RefreshReg$"],"sources":["E:/MERN-Project/frontend/src/components/GetSong.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css, Theme } from '@emotion/react';\r\nimport styled from '@emotion/styled';\r\nimport React, { useState, ChangeEvent } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addSongFetch, SongType } from '../songState/songsState';\r\n\r\ninterface FormProps {\r\n  showForm: boolean;\r\n  theme?: Theme;\r\n}\r\n\r\n// Styled components\r\nconst Container = styled.div`\r\n  margin: 20px;\r\n`;\r\n\r\nconst ToggleButton = styled.button`\r\n  padding: 10px;\r\n  margin-bottom: 10px;\r\n  background-color: #4caf50;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Form = styled.form<FormProps>`\r\n  display: ${(props) => (props.showForm ? 'block' : 'none')};\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst FormLabel = styled.label`\r\n  display: block;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst FormInput = styled.input`\r\n  width: 100%;\r\n  padding: 8px;\r\n  margin-top: 5px;\r\n  margin-bottom: 10px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst SubmitButton = styled.button`\r\n  background-color: #4caf50;\r\n  color: white;\r\n  padding: 10px;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst AddSong: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [newSong, setNewSong] = useState<SongType>({\r\n    title: '',\r\n    artist: '',\r\n    album: '',\r\n    genre: '',\r\n  });\r\n\r\n  // State to track whether the form should be displayed\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const handleAddSong = () => {\r\n    dispatch({\r\n      type: 'songs/addSongFetch',\r\n      payload: {\r\n        title: newSong.title,\r\n        artist: newSong.artist,\r\n        album: newSong.album,\r\n        genre: newSong.genre,\r\n      },\r\n    });\r\n\r\n    setNewSong({\r\n      title: '',\r\n      artist: '',\r\n      album: '',\r\n      genre: '',\r\n    });\r\n\r\n    // After adding the song, hide the form\r\n    setShowForm(false);\r\n  };\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setNewSong((prevSong) => ({\r\n      ...prevSong,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {/* Display button to toggle the form visibility */}\r\n      <ToggleButton type=\"button\" onClick={() => setShowForm(!showForm)}>\r\n        {showForm ? 'Hide Form' : 'Add Song'}\r\n      </ToggleButton>\r\n\r\n      {/* Display the form only when showForm is true */}\r\n      <Form showForm={showForm}>\r\n        <FormLabel>\r\n          Title:\r\n          <FormInput type=\"text\" name=\"title\" value={newSong.title} onChange={handleChange} />\r\n        </FormLabel>\r\n        <FormLabel>\r\n          Artist:\r\n          <FormInput type=\"text\" name=\"artist\" value={newSong.artist} onChange={handleChange} />\r\n        </FormLabel>\r\n        <FormLabel>\r\n          Album:\r\n          <FormInput type=\"text\" name=\"album\" value={newSong.album} onChange={handleChange} />\r\n        </FormLabel>\r\n        <FormLabel>\r\n          Genre:\r\n          <FormInput type=\"text\" name=\"genre\" value={newSong.genre} onChange={handleChange} />\r\n        </FormLabel>\r\n        <SubmitButton type=\"button\" onClick={handleAddSong}>\r\n          Add Song\r\n        </SubmitButton>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddSong;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}