{"ast":null,"code":"var _jsxFileName = \"E:\\\\MERN-Project\\\\frontend\\\\src\\\\components\\\\AddSong.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddSong = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [newSong, setNewSong] = useState({\n    title: '',\n    artist: '',\n    album: '',\n    genre: ''\n  });\n\n  // State to track whether the form should be displayed\n  const [showForm, setShowForm] = useState(false);\n  const handleAddSong = () => {\n    dispatch({\n      type: 'songs/addSongFetch',\n      payload: {\n        title: newSong.title,\n        artist: newSong.artist,\n        album: newSong.album,\n        genre: newSong.genre\n      }\n    });\n    setNewSong({\n      title: '',\n      artist: '',\n      album: '',\n      genre: ''\n    });\n\n    // After adding the song, hide the form\n    setShowForm(false);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewSong(prevSong => ({\n      ...prevSong,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => setShowForm(!showForm),\n      children: showForm ? 'Hide Form' : 'Show Add Song Form'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddSong,\n        children: \"Add Song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(AddSong, \"N1jmDibef0SyPr2jqKugNkiYO0o=\", false, function () {\n  return [useDispatch];\n});\n_c = AddSong;\nexport default AddSong;\nvar _c;\n$RefreshReg$(_c, \"AddSong\");","map":{"version":3,"names":["React","useState","useDispatch","jsxDEV","_jsxDEV","AddSong","_s","dispatch","newSong","setNewSong","title","artist","album","genre","showForm","setShowForm","handleAddSong","type","payload","handleChange","e","name","value","target","prevSong","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/MERN-Project/frontend/src/components/AddSong.tsx"],"sourcesContent":["import React, { useState, ChangeEvent } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addSongFetch, SongType } from '../songState/songsState';\r\n\r\nconst AddSong: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [newSong, setNewSong] = useState<SongType>({\r\n    title: '',\r\n    artist: '',\r\n    album: '',\r\n    genre: '',\r\n  });\r\n\r\n  // State to track whether the form should be displayed\r\n  const [showForm, setShowForm] = useState(false);\r\n\r\n  const handleAddSong = () => {\r\n    dispatch({\r\n      type: 'songs/addSongFetch',\r\n      payload: {\r\n        title: newSong.title,\r\n        artist: newSong.artist,\r\n        album: newSong.album,\r\n        genre: newSong.genre,\r\n      },\r\n    });\r\n\r\n    setNewSong({\r\n      title: '',\r\n      artist: '',\r\n      album: '',\r\n      genre: '',\r\n    });\r\n\r\n    // After adding the song, hide the form\r\n    setShowForm(false);\r\n  };\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setNewSong((prevSong) => ({\r\n      ...prevSong,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Display button to toggle the form visibility */}\r\n      <button type=\"button\" onClick={() => setShowForm(!showForm)}>\r\n        {showForm ? 'Hide Form' : 'Show Add Song Form'}\r\n      </button>\r\n\r\n      {/* Display the form only when showForm is true */}\r\n      {showForm && (\r\n        <form>\r\n          {/* ... (your form inputs) */}\r\n          <button type=\"button\" onClick={handleAddSong}>\r\n            Add Song\r\n          </button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddSong;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAqB,OAAO;AACpD,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,MAAMC,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAW;IAC/CS,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE;EACT,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMe,aAAa,GAAGA,CAAA,KAAM;IAC1BT,QAAQ,CAAC;MACPU,IAAI,EAAE,oBAAoB;MAC1BC,OAAO,EAAE;QACPR,KAAK,EAAEF,OAAO,CAACE,KAAK;QACpBC,MAAM,EAAEH,OAAO,CAACG,MAAM;QACtBC,KAAK,EAAEJ,OAAO,CAACI,KAAK;QACpBC,KAAK,EAAEL,OAAO,CAACK;MACjB;IACF,CAAC,CAAC;IAEFJ,UAAU,CAAC;MACTC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE;IACT,CAAC,CAAC;;IAEF;IACAE,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,MAAMI,YAAY,GAAIC,CAAgC,IAAK;IACzD,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCd,UAAU,CAAEe,QAAQ,KAAM;MACxB,GAAGA,QAAQ;MACX,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACElB,OAAA;IAAAqB,QAAA,gBAEErB,OAAA;MAAQa,IAAI,EAAC,QAAQ;MAACS,OAAO,EAAEA,CAAA,KAAMX,WAAW,CAAC,CAACD,QAAQ,CAAE;MAAAW,QAAA,EACzDX,QAAQ,GAAG,WAAW,GAAG;IAAoB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,EAGRhB,QAAQ,iBACPV,OAAA;MAAAqB,QAAA,eAEErB,OAAA;QAAQa,IAAI,EAAC,QAAQ;QAACS,OAAO,EAAEV,aAAc;QAAAS,QAAA,EAAC;MAE9C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CA7DID,OAAiB;EAAA,QACJH,WAAW;AAAA;AAAA6B,EAAA,GADxB1B,OAAiB;AA+DvB,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}