{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN-Project\\\\frontend\\\\src\\\\components\\\\GetSong.tsx\",\n  _s = $RefreshSig$();\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React, { useState, useEffect } from 'react';\nimport { getSongsFetch } from '../songState/songsState';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMusic, faTrashAlt, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nconst itemStyle = css`\n  margin-bottom: 10px;\n`;\nconst getButtonColor = category => {\n  switch (category) {\n    case 'title':\n      return 'red';\n    case 'artist':\n      return 'green';\n    case 'album':\n      return 'blue';\n    case 'genre':\n      return 'orange';\n    default:\n      return 'gray';\n  }\n};\nconst buttonStyle = category => css`\n  margin-left: 5px;\n  background-color: ${getButtonColor(category)};\n  color: white;\n  padding: 5px 10px;\n  border: none;\n  cursor: pointer;\n`;\nconst GetSong = () => {\n  _s();\n  const dispatch = useDispatch();\n  const songs = useSelector(state => state.songs.songs);\n  const [distinctData, setDistinctData] = useState({});\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const handleButtonClick = category => {\n    setSelectedCategory(selectedCategory === category ? null : category);\n    dispatch(getSongsFetch());\n  };\n  useEffect(() => {\n    if (songs && selectedCategory) {\n      const uniqueData = {\n        title: new Set(),\n        artist: new Set(),\n        album: new Set(),\n        genre: new Set()\n      };\n      songs.forEach(item => {\n        uniqueData.title.add(item.title);\n        uniqueData.artist.add(item.artist);\n        uniqueData.album.add(item.album);\n        uniqueData.genre.add(item.genre);\n      });\n      setDistinctData({\n        title: Array.from(uniqueData.title),\n        artist: Array.from(uniqueData.artist),\n        album: Array.from(uniqueData.album),\n        genre: Array.from(uniqueData.genre)\n      });\n    }\n  }, [songs, selectedCategory]);\n  const handleDelete = item => {\n    // Add your logic to dispatch an action to delete the item\n    console.log(`Deleting ${item}`);\n  };\n  const handleEdit = item => {\n    // Add your logic to dispatch an action to edit the item\n    console.log(`Editing ${item}`);\n  };\n  return _jsxDEV(\"div\", {\n    children: [_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('title'),\n      css: buttonStyle('title'),\n      children: selectedCategory === 'title' ? 'Undo' : 'Titles'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), _jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('artist'),\n      css: buttonStyle('artist'),\n      children: selectedCategory === 'artist' ? 'Undo' : 'Artists'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), _jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('album'),\n      css: buttonStyle('album'),\n      children: selectedCategory === 'album' ? 'Undo' : 'Albums'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), _jsxDEV(\"button\", {\n      onClick: () => handleButtonClick('genre'),\n      css: buttonStyle('genre'),\n      children: selectedCategory === 'genre' ? 'Undo' : 'Genres'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), selectedCategory && distinctData[selectedCategory] && _jsxDEV(\"div\", {\n      children: [_jsxDEV(\"h2\", {\n        children: [selectedCategory.charAt(0).toUpperCase() + selectedCategory.slice(1), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), distinctData[selectedCategory].map((item, index) => _jsxDEV(\"div\", {\n        css: itemStyle,\n        children: [_jsxDEV(FontAwesomeIcon, {\n          icon: faMusic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this), \" \", item, _jsxDEV(\"button\", {\n          onClick: () => handleEdit(item),\n          css: buttonStyle(selectedCategory),\n          children: [_jsxDEV(FontAwesomeIcon, {\n            icon: faEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), \" Edit\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), _jsxDEV(\"button\", {\n          onClick: () => handleDelete(item),\n          css: buttonStyle(selectedCategory),\n          children: [_jsxDEV(FontAwesomeIcon, {\n            icon: faTrashAlt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this), \" Delete\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(GetSong, \"cuXfROrdLLozzC9hAxGEmUImB/A=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = GetSong;\nexport default GetSong;\nvar _c;\n$RefreshReg$(_c, \"GetSong\");","map":{"version":3,"names":["css","React","useState","useEffect","getSongsFetch","useDispatch","useSelector","FontAwesomeIcon","faMusic","faTrashAlt","faEdit","jsxDEV","_jsxDEV","itemStyle","getButtonColor","category","buttonStyle","GetSong","_s","dispatch","songs","state","distinctData","setDistinctData","selectedCategory","setSelectedCategory","handleButtonClick","uniqueData","title","Set","artist","album","genre","forEach","item","add","Array","from","handleDelete","console","log","handleEdit","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","slice","map","index","icon","_c","$RefreshReg$"],"sources":["D:/MERN-Project/frontend/src/components/GetSong.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\r\nimport { css } from '@emotion/react';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getSongsFetch, rootState } from '../songState/songsState';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMusic, faTrashAlt, faEdit } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst itemStyle = css`\r\n  margin-bottom: 10px;\r\n`;\r\nconst getButtonColor = (category: string) => {\r\n  switch (category) {\r\n    case 'title':\r\n      return 'red';\r\n    case 'artist':\r\n      return 'green';\r\n    case 'album':\r\n      return 'blue';\r\n    case 'genre':\r\n      return 'orange';\r\n    default:\r\n      return 'gray';\r\n  }\r\n};\r\nconst buttonStyle = (category: string) => css`\r\n  margin-left: 5px;\r\n  background-color: ${getButtonColor(category)};\r\n  color: white;\r\n  padding: 5px 10px;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst GetSong: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const songs = useSelector((state: rootState) => state.songs.songs);\r\n  const [distinctData, setDistinctData] = useState<{ [key: string]: string[] }>({});\r\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\r\n\r\n  const handleButtonClick = (category: string) => {\r\n    setSelectedCategory(selectedCategory === category ? null : category);\r\n    dispatch(getSongsFetch());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (songs && selectedCategory) {\r\n      const uniqueData: { [key: string]: Set<string> } = {\r\n        title: new Set<string>(),\r\n        artist: new Set<string>(),\r\n        album: new Set<string>(),\r\n        genre: new Set<string>(),\r\n      };\r\n\r\n      songs.forEach((item) => {\r\n        uniqueData.title.add(item.title);\r\n        uniqueData.artist.add(item.artist);\r\n        uniqueData.album.add(item.album);\r\n        uniqueData.genre.add(item.genre);\r\n      });\r\n\r\n      setDistinctData({\r\n        title: Array.from(uniqueData.title),\r\n        artist: Array.from(uniqueData.artist),\r\n        album: Array.from(uniqueData.album),\r\n        genre: Array.from(uniqueData.genre),\r\n      });\r\n    }\r\n  }, [songs, selectedCategory]);\r\n\r\n  const handleDelete = (item: string) => {\r\n    // Add your logic to dispatch an action to delete the item\r\n    console.log(`Deleting ${item}`);\r\n  };\r\n\r\n  const handleEdit = (item: string) => {\r\n    // Add your logic to dispatch an action to edit the item\r\n    console.log(`Editing ${item}`);\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => handleButtonClick('title')} css={buttonStyle('title')}>\r\n        {selectedCategory === 'title' ? 'Undo' : 'Titles'}\r\n      </button>\r\n\r\n      <button onClick={() => handleButtonClick('artist')} css={buttonStyle('artist')}>\r\n        {selectedCategory === 'artist' ? 'Undo' : 'Artists'}\r\n      </button>\r\n\r\n      <button onClick={() => handleButtonClick('album')} css={buttonStyle('album')}>\r\n        {selectedCategory === 'album' ? 'Undo' : 'Albums'}\r\n      </button>\r\n\r\n      <button onClick={() => handleButtonClick('genre')} css={buttonStyle('genre')}>\r\n        {selectedCategory === 'genre' ? 'Undo' : 'Genres'}\r\n      </button>\r\n\r\n      {selectedCategory && distinctData[selectedCategory] && (\r\n        <div>\r\n          <h2>{selectedCategory.charAt(0).toUpperCase() + selectedCategory.slice(1)}:</h2>\r\n\r\n          {distinctData[selectedCategory].map((item, index) => (\r\n            <div key={index} css={itemStyle}>\r\n              <FontAwesomeIcon icon={faMusic} /> {item}\r\n              <button onClick={() => handleEdit(item)} css={buttonStyle(selectedCategory)}>\r\n                <FontAwesomeIcon icon={faEdit} /> Edit\r\n              </button>\r\n              <button onClick={() => handleDelete(item)} css={buttonStyle(selectedCategory)}>\r\n                <FontAwesomeIcon icon={faTrashAlt} /> Delete\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetSong;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}