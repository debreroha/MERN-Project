{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n// import { fetchSongs, createSong as createSongAPI, updateSong as updateSongAPI, deleteSong as deleteSongAPI } from '../services/api';\nimport { fetchSongs } from '../services/api';\nconst songsSlice = createSlice({\n  name: 'songs',\n  initialState: [],\n  reducers: {\n    setSongs: (state, action) => {\n      return action.payload;\n    },\n    addSong: (state, action) => {\n      state.push(action.payload);\n    },\n    updateSong: (state, action) => {\n      const {\n        id,\n        ...updatedSong\n      } = action.payload;\n      const songIndex = state.findIndex(song => song.id === id);\n      if (songIndex !== -1) {\n        state[songIndex] = {\n          ...state[songIndex],\n          ...updatedSong\n        };\n      }\n    },\n    deleteSong: (state, action) => {\n      const songIndex = state.findIndex(song => song.id === action.payload);\n      if (songIndex !== -1) {\n        state.splice(songIndex, 1);\n      }\n    }\n  }\n});\nexport const {\n  setSongs,\n  addSong,\n  updateSong,\n  deleteSong\n} = songsSlice.actions;\nexport const fetchSongsAsync = () => async dispatch => {\n  try {\n    const response = await fetchSongs();\n    dispatch(setSongs(response.data));\n  } catch (error) {\n    console.error('Failed to fetch songs:', error);\n  }\n};\nexport const createSongAsync = songData => async dispatch => {\n  try {\n    const response = await createSongAPI(songData);\n    dispatch(addSong(response.data));\n  } catch (error) {\n    console.error('Failed to create song:', error);\n  }\n};\nexport const updateSongAsync = (id, songData) => async dispatch => {\n  try {\n    await updateSongAPI(id, songData);\n    dispatch(updateSong({\n      id,\n      ...songData\n    }));\n  } catch (error) {\n    console.error('Failed to update song:', error);\n  }\n};\nexport const deleteSongAsync = id => async dispatch => {\n  try {\n    await deleteSongAPI(id);\n    dispatch(deleteSong(id));\n  } catch (error) {\n    console.error('Failed to delete song:', error);\n  }\n};\nexport default songsSlice.reducer;","map":{"version":3,"names":["createSlice","fetchSongs","songsSlice","name","initialState","reducers","setSongs","state","action","payload","addSong","push","updateSong","id","updatedSong","songIndex","findIndex","song","deleteSong","splice","actions","fetchSongsAsync","dispatch","response","data","error","console","createSongAsync","songData","createSongAPI","updateSongAsync","updateSongAPI","deleteSongAsync","deleteSongAPI","reducer"],"sources":["D:/MERN Stack/frontend/src/redux/songsSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n// import { fetchSongs, createSong as createSongAPI, updateSong as updateSongAPI, deleteSong as deleteSongAPI } from '../services/api';\r\nimport { fetchSongs } from '../services/api';\r\nconst songsSlice = createSlice({\r\n  name: 'songs',\r\n  initialState: [],\r\n  reducers: {\r\n    setSongs: (state, action) => {\r\n      return action.payload;\r\n    },\r\n    addSong: (state, action) => {\r\n      state.push(action.payload);\r\n    },\r\n    updateSong: (state, action) => {\r\n      const { id, ...updatedSong } = action.payload;\r\n      const songIndex = state.findIndex((song) => song.id === id);\r\n      if (songIndex !== -1) {\r\n        state[songIndex] = { ...state[songIndex], ...updatedSong };\r\n      }\r\n    },\r\n    deleteSong: (state, action) => {\r\n      const songIndex = state.findIndex((song) => song.id === action.payload);\r\n      if (songIndex !== -1) {\r\n        state.splice(songIndex, 1);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setSongs, addSong, updateSong, deleteSong } = songsSlice.actions;\r\n\r\nexport const fetchSongsAsync = () => async (dispatch) => {\r\n  try {\r\n    const response = await fetchSongs();\r\n    dispatch(setSongs(response.data));\r\n  } catch (error) {\r\n    console.error('Failed to fetch songs:', error);\r\n  }\r\n};\r\n\r\nexport const createSongAsync = (songData) => async (dispatch) => {\r\n  try {\r\n    const response = await createSongAPI(songData);\r\n    dispatch(addSong(response.data));\r\n  } catch (error) {\r\n    console.error('Failed to create song:', error);\r\n  }\r\n};\r\n\r\nexport const updateSongAsync = (id, songData) => async (dispatch) => {\r\n  try {\r\n    await updateSongAPI(id, songData);\r\n    dispatch(updateSong({ id, ...songData }));\r\n  } catch (error) {\r\n    console.error('Failed to update song:', error);\r\n  }\r\n};\r\n\r\nexport const deleteSongAsync = (id) => async (dispatch) => {\r\n  try {\r\n    await deleteSongAPI(id);\r\n    dispatch(deleteSong(id));\r\n  } catch (error) {\r\n    console.error('Failed to delete song:', error);\r\n  }\r\n};\r\n\r\nexport default songsSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}